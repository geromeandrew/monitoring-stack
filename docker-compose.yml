services:
  ## Prometheus: Scrapes metrics from various services
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.listen-address=0.0.0.0:9090
      - --web.external-url=/prometheus
      - --web.route-prefix=/
    ports:
      - "9090:9090"
    networks:
      - monitoring
    restart: unless-stopped

  prometheus2:
    image: prom/prometheus:latest
    container_name: prometheus2
    volumes:
      - prometheus2-data:/prometheus
      - ./prometheus2.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.listen-address=0.0.0.0:9091
    ports:
      - "9091:9091"
    networks:
      - monitoring
    restart: unless-stopped

  prometheus3:
    image: prom/prometheus:latest
    container_name: prometheus3
    volumes:
      - prometheus3-data:/prometheus
      - ./prometheus3.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.listen-address=0.0.0.0:9092
    ports:
      - "9092:9092"
    networks:
      - monitoring
    restart: unless-stopped

  prometheus-prod:
    image: prom/prometheus:latest
    container_name: prometheus-prod
    volumes:
      - prometheus-prod-data:/prometheus
      - ./prometheus-prod.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.listen-address=0.0.0.0:9093
    ports:
      - "9093:9093"
    networks:
      - monitoring
    restart: unless-stopped

  ## Grafana: Dashboard for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana:/etc/grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_SERVER_ROOT_URL=https://ops.zennerslab.com/
      - GF_SERVER_SERVE_FROM_SUB_PATH=false

  ## Loki: Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: loki
    volumes:
      - loki-data:/loki
      - ./loki-config.yml:/loki-config.yml:ro
    command: -config.file=/loki-config.yml
    ports:
      - "3100:3100"
    networks:
      - monitoring
    restart: unless-stopped

  ## Tempo: Tracing (APM)
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    volumes:
      - tempo-data:/var/tempo
      - ./tempo-config.yml:/tempo-config.yml:ro
    command: ["-config.file=/tempo-config.yml"]
    ports:
      - "3200:3200"
    networks:
      - monitoring
    restart: unless-stopped

  ## Blackbox Exporter: Uptime Monitoring
  blackbox:
    image: prom/blackbox-exporter:latest
    container_name: blackbox
    ports:
      - "9115:9115"
    networks:
      - monitoring
    restart: unless-stopped

  frontend:
    image: staticfloat/nginx-certbot
    container_name: frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      CERTBOT_EMAIL: michael.cu@iainnovations.com
    volumes:
      - ./conf.d:/etc/nginx/user.conf.d:ro
      - letsencrypt:/etc/letsencrypt
      - static_volume:/app/staticfiles
      - ./app/templates/pages:/usr/share/nginx/html/pages:ro
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  grafana-data:
  prometheus-data:
  prometheus2-data:
  prometheus3-data:
  prometheus-prod-data:
  loki-data:
  tempo-data:
  letsencrypt:
  static_volume:
