version: '3.8'

services:
  ## Prometheus: Scrapes metrics from various services
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - "--web.listen-address=0.0.0.0:9090"
    ports:
      - "9090:9090"
    networks:
      - monitoring
    restart: unless-stopped

  ## Prometheus: Scrapes metrics from various services
  prometheus2:
    image: prom/prometheus:latest
    container_name: prometheus2
    volumes:
      - ./prometheus2.yml:/etc/prometheus/prometheus2.yml
    command:
      - --config.file=/etc/prometheus/prometheus2.yml
      - "--web.listen-address=0.0.0.0:9091"
    ports:
      - "9091:9091"
    networks:
      - monitoring
    restart: unless-stopped

  prometheus3:
    image: prom/prometheus:latest
    container_name: prometheus3
    volumes:
      - ./prometheus3.yml:/etc/prometheus/prometheus3.yml
    command:
      - --config.file=/etc/prometheus/prometheus3.yml
      - "--web.listen-address=0.0.0.0:9092"
    ports:
      - "9092:9092"
    networks:
      - monitoring
    restart: unless-stopped

  prometheus-prod:
    image: prom/prometheus:latest
    container_name: prometheus-prod
    volumes:
      - ./prometheus-prod.yml:/etc/prometheus/prometheus-prod.yml
    command:
      - --config.file=/etc/prometheus/prometheus-prod.yml
      - "--web.listen-address=0.0.0.0:9093"
    ports:
      - "9093:9093"
    networks:
      - monitoring
    restart: unless-stopped

  ## Grafana: Dashboard for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana-data:/var/lib/grafana  # Keeps persistent data
      - ./grafana:/etc/grafana  # Mounts the entire grafana config directory
    ports:
      - "3000:3000"
    networks:
      - monitoring
    restart: unless-stopped

  ## Loki: Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: loki
    volumes:
      - ./loki-config.yml:/loki-config.yml
    command: -config.file=/loki-config.yml
    ports:
      - "3100:3100"
    networks:
      - monitoring
    restart: unless-stopped

  ## Tempo: Tracing (APM)
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    volumes:
      - ./tempo-config.yml:/tempo-config.yml
    command: [ "-config.file=/tempo-config.yml" ]
    ports:
      - "3200:3200"
    networks:
      - monitoring
    restart: unless-stopped

  ## Blackbox Exporter: Uptime Monitoring
  blackbox:
    image: prom/blackbox-exporter:latest
    container_name: blackbox
    ports:
      - "9115:9115"
    networks:
      - monitoring
    restart: unless-stopped

  frontend:
    restart: unless-stopped
    image: staticfloat/nginx-certbot
    ports:
      - 80:80/tcp
      - 443:443/tcp
    environment:
      CERTBOT_EMAIL: michael.cu@iainnovations.com
    volumes:
      - ./conf.d:/etc/nginx/user.conf.d:ro
      - letsencrypt:/etc/letsencrypt
      - static_volume:/app/staticfiles
      - ./app/templates/pages:/usr/share/nginx/html/pages:ro
  ## Node Exporter: Server Resource Monitoring (for staging)
  # node-exporter:
  #   image: prom/node-exporter:latest
  #   container_name: node-exporter
  #   ports:
  #     - "9100:9100"
  #   networks:
  #     - monitoring
  #   restart: unless-stopped

  # ## cAdvisor: Container Metrics (for staging)
  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:latest
  #   container_name: cadvisor
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #   networks:
  #     - monitoring
  #   restart: unless-stopped

  ## Promtail: Log Collection (for staging)
  # promtail:
  #   image: grafana/promtail:latest
  #   container_name: promtail
  #   volumes:
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     - /var/log:/var/log
  #     - ./promtail-config.yml:/etc/promtail/promtail-config.yml
  #   command: -config.file=/etc/promtail/promtail-config.yml
  #   networks:
  #     - monitoring
  #   restart: unless-stopped

networks:
  monitoring:
    driver: bridge

volumes:
  grafana-data:
