upstream prometheus {
    server prometheus:9090;
}

upstream grafana {
    server grafana:3000;
}

upstream loki {
    server loki:3100;
}

server {
    listen 80;
    server_name ops.zennerslab.com;

    location /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen              443 ssl;
    server_name         ops.zennerslab.com;

    ssl_certificate     /etc/letsencrypt/live/ops.zennerslab.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ops.zennerslab.com/privkey.pem;

    # Optional: redirect root to Grafana
    location = / {
        return 302 /grafana/;
    }

    # Prometheus under /prometheus/
    location = /prometheus { return 301 /prometheus/; }
    location /prometheus/ {
        rewrite ^/prometheus(/.*)$ $1 break;
        proxy_pass http://prometheus/;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # Grafana under /grafana/
    location = /grafana { return 301 /grafana/; }
    location /grafana/ {
        # Preserve /grafana prefix to avoid redirect loops
        proxy_pass http://grafana;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "upgrade";
        proxy_set_header   Host $host;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   X-Forwarded-Port  $server_port;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header   X-Forwarded-Prefix /grafana;
        proxy_redirect     off;
        proxy_read_timeout  300;
        proxy_send_timeout  300;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    location /loki/ {
        rewrite ^/loki(/.*)$ $1 break;
        proxy_pass http://loki/;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
    }
}
